/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package view;

import java.beans.PropertyChangeListener;
import java.beans.PropertyChangeSupport;
import javax.swing.JOptionPane;
import javax.swing.table.AbstractTableModel;

/**
 *
 * @author e.talmitte
 */
public class MainView extends javax.swing.JFrame {

    private PropertyChangeSupport listeners = new PropertyChangeSupport(this);

    /**
     * Creates new form MainView
     */
    public MainView() {
        initComponents();
    }

    public void addPropertyChangeListener(PropertyChangeListener l) {
        listeners.addPropertyChangeListener(l);
    }

    public void setTableModel(AbstractTableModel tableModel) {
        this.usersList.setModel(tableModel);
        this.usersList.removeColumn(this.usersList.getColumn("ID"));
        this.usersList.removeColumn(this.usersList.getColumn("Mot de passe"));

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        usersList = new javax.swing.JTable();
        insertBtn = new javax.swing.JButton();
        modifBtn = new javax.swing.JButton();
        supprBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        usersList.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(usersList);

        insertBtn.setLabel("Ajouter");
        insertBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insertBtnActionPerformed(evt);
            }
        });

        modifBtn.setText("modifier");
        modifBtn.setToolTipText("");
        modifBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modifBtnActionPerformed(evt);
            }
        });

        supprBtn.setText("supprimer");
        supprBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                supprBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(151, 151, 151)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(modifBtn)
                        .addGap(125, 125, 125)
                        .addComponent(supprBtn))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(insertBtn)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(195, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(insertBtn)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(modifBtn)
                    .addComponent(supprBtn))
                .addContainerGap(28, Short.MAX_VALUE))
        );

        insertBtn.getAccessibleContext().setAccessibleDescription("");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    // Bouton Ajouter
    private void insertBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insertBtnActionPerformed
        listeners.firePropertyChange("openInsertUser", null, null);
    }//GEN-LAST:event_insertBtnActionPerformed

    // Bouton Modifier
    private void modifBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modifBtnActionPerformed
        listeners.firePropertyChange("openUpdateUser", null, null);
    }//GEN-LAST:event_modifBtnActionPerformed

    // Bouton Supprimer
    private void supprBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_supprBtnActionPerformed
        // Confirmation pour supprimer l'utilisateur
        int retour = JOptionPane.showConfirmDialog(this, "Êtes-vous sûr de vouloir supprimer cet utilisateur ?");
        // Test si l'utilisateur a repondu oui
        if (retour == JOptionPane.YES_OPTION) {
            try {
                listeners.firePropertyChange("deleteUser", null, null);
            } catch (ArrayIndexOutOfBoundsException e) {
                // Si aucun utilisateur est sélectionné alors message d'erreur
                JOptionPane.showMessageDialog(this, "Aucun utilisateur sélectionné.");
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Aucun utilisateur sélectionné");
            }
        }
    }//GEN-LAST:event_supprBtnActionPerformed
    // Getter
    // Obtenir les informations de chaque colone de la Jtable
    public int getSelectedId() {
        return (Integer) this.usersList.getModel().getValueAt(this.usersList.getSelectedRow(), 0);
    }

    public String getSelectedNom() {
        return (String) this.usersList.getModel().getValueAt(this.usersList.getSelectedRow(), 1);
    }

    public String getSelectedPrenom() {
        return (String) this.usersList.getModel().getValueAt(this.usersList.getSelectedRow(), 2);
    }

    public String getSelectedEmail() {
        return (String) this.usersList.getModel().getValueAt(this.usersList.getSelectedRow(), 3);
    }

    public String getSelectedMdp() {
        return (String) this.usersList.getModel().getValueAt(this.usersList.getSelectedRow(), 4);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton insertBtn;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton modifBtn;
    private javax.swing.JButton supprBtn;
    private javax.swing.JTable usersList;
    // End of variables declaration//GEN-END:variables
}
